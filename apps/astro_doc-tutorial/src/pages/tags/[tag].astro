---
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from "astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogPost from "@components/BlogPost.astro";

export const getStaticPaths = (() => {
  const allPosts = Object.values(import.meta.glob("../posts/*.md", { eager: true }));

  return [
    { params: { tag: "astro" }, props: { posts: allPosts } },
    { params: { tag: "successes" }, props: { posts: allPosts } },
    { params: { tag: "community" }, props: { posts: allPosts } },
    { params: { tag: "blogging" }, props: { posts: allPosts } },
    { params: { tag: "setbacks" }, props: { posts: allPosts } },
    { params: { tag: "learning in public" }, props: { posts: allPosts } },
  ];
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map((post: any) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
  </ul>
</BaseLayout>
