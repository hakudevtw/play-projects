---
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from "astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogPost from "@components/BlogPost.astro";

export const getStaticPaths = (() => {
  const allPosts = Object.values(import.meta.glob("../posts/*.md", { eager: true }));
  const tags = new Set<string>(allPosts.flatMap((post: any) => post.frontmatter.tags ?? []));
  return Array.from(tags).map((tag) => ({ params: { tag }, props: { posts: allPosts } }));
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map((post: any) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
  </ul>
</BaseLayout>
